@using Web.ViewModels.CatalogViewModels


@model IndexViewModel


<div class="catalogGrid">
    @foreach (var product in Model.Products)
    {
        <form asp-action="Index" asp-controller="Catalog" method="post">
            <input asp-for="@Model.ProductId" type="hidden" value="@product.Id">
            <button class="catalogProductDisplay">
                <img src="@product.PictureUrl" class="catalogProductImage" />
                <p class="catalogProductBrand">@product.Brand.Name</p>
                <type="hidden" value="@product.Name">
                <p class="catalogProductName">@product.Name</p>
                <p class="catalogProductPrice">@product.Price kr</p>
                @if(product.Rating is not null)
                {
                        <div class="catalogRating">
                        @for(int i = 0; i<5; i++)
                        {
                           @if(i < product.Rating)
                           {
                                    <img src="https://i.imgur.com/blIpMB4.png" class="ratingStar"/>
                           }
                           else
                           {
                                    <img src="https://i.imgur.com/b15onED.png" class="ratingStar"/>          
                           }         
                        }
                    </div>          
                }
            </button>
        </form>
    }
</div>





<div class="paginationButtonContainer">
    @if (Model.PaginationHelper.NextIsEnabled)
    {
        <form asp-action="Index" asp-controller="Catalog" method="post">
            <input type="hidden" name="page" value="@(Model.PaginationHelper.Page + 1)" />
            <button type="submit" class="paginationButtonNext" id="searchbutton">Next Page</button>
        </form>
    }
    @if (Model.PaginationHelper.PreviousIsEnabled)
    {
        <form asp-action="Index" asp-controller="Catalog" method="post">
            <input type="hidden" name="page" value="@(Model.PaginationHelper.Page - 1)" />
            <button type="submit" class="paginationButtonPrevious" id="searchbutton">Previous Page</button>
        </form>
    }

    <p class="paginationText">Showing @Model.PaginationHelper.ProductsOnPage of @Model.PaginationHelper.ProductCount - Page @Model.PaginationHelper.Page of @Model.PaginationHelper.PageCount</p>

</div>