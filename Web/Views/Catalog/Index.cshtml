@using System.Text.Json
@using Web.ViewModels.CatalogViewModels
@{
    ViewData["Title"] = "Home Page";
}

@model IndexViewModel

<div class="wrapper">
    <div class="dropdown-menu">
        @foreach (var category in Model.Category)
        {
            <div class="dropdown">
                <button class="dropbtn">@category.Name</button>
                <div class="dropdown-content">
                    <h3>Product Types</h3>
                    @foreach (var item in Model.ProductType)
                    {
                        @if (item.Category.Name == category.Name)
                        {
                            <form asp-action="Index" asp-controller="Catalog" method="post">
                                <label class="catalog-label" data-title="productType">
                                    <input asp-for="@Model.FilterApplied" type="hidden" value="true" />
                                    <input asp-for="@Model.ProductTypeSelected" type="hidden" value="@item.Id">
                                    <input type="submit" class="astextsubmit" value="@item.Name">
                                </label>
                            </form>
                        }
                    }
                    <h3>Brands</h3>
                    @foreach (var item in Model.Brand)
                    {
                        @*Have to make changes to the relationships here so that it only shows the relevant brand*@
                        <form asp-action="Index" asp-controller="Catalog" method="post">
                            <label class="catalog-label" data-title="brand">
                                <input asp-for="@Model.FilterApplied" type="hidden" value="true" />
                                <input asp-for="@Model.BrandSelected" type="hidden" value="@item.Id">
                                <input type="submit" class="astextsubmit" value="@item.Name">
                            </label>
                        </form>
                    }
                </div>
            </div>
        }
    </div>
</div>






<div class="product-display">
    @foreach (var p in Model.Products)
{
    <ul>
        <li>@p.Name</li>
    </ul>
}
</div>
@if(Model.PaginationHelper.NextIsEnabled == true)
{
    <form asp-action="Index" asp-controller="Catalog" method="post">
        <label class="catalog-label" data-title="page">
            <input type="hidden" name="page" value="@(Model.PaginationHelper.Page + 1)" />
            <button type="submit" class="btn btn-info" id="searchbutton">Next Page</button>
        </label>
    </form>
}
@if(Model.PaginationHelper.PreviousIsEnabled == true)
{
    <form asp-action="Index" asp-controller="Catalog" method="post">
        <label class="catalog-label" data-title="page">
            <input type="hidden" name="page" value="@(Model.PaginationHelper.Page - 1)" />
            <button type="submit" class="btn btn-info" id="searchbutton">Previous Page</button>
        </label>
    </form>

}




